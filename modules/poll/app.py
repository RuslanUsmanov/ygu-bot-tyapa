import asyncio

import discord
from discord.ext import commands

from modules.base.ext import BaseBot


class Poll:
    """
    –ö–ª–∞—Å—Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —Å –∞—Ç—Ç—Ä–∏–±—É—Ç–∞–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏
    –ê —Ç–∞–∫–∂–µ –º–µ—Ç–æ–¥–æ–º –¥–ª—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    """
    react_list = ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"]
    message = "–í–Ω–∏–º–∞–Ω–∏–µ! –ù–æ–≤–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ!\n" \
              "–í–∞—Ä–∏–∞–Ω—Ç—ã:"
    color = discord.Colour.from_rgb(108, 145, 191)
    result = f"–ü–æ –∏—Ç–æ–≥–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:\n"

    @staticmethod
    def build_msg(*options):
        """
        –ú–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π —Å–æ–±–∏—Ä–∞–µ—Ç –Ω–æ–≤–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
        """
        if not options:
            new_message = Poll.message + "\n‚úÖ = __*–î–∞*__" \
                                         "\n‚ùé = __*–ù–µ—Ç*__"
            return new_message
        else:
            new_message = Poll.message
            for ind, option in enumerate(options):
                new_message += f"\n{ind + 1}) __*{option}*__"
            return new_message


class PollBot(BaseBot):
    """
    –ù–∞–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
    >poll "–¢–µ–º–∞"(–≤ –∫–∞–≤—ã—á–∫–∞—Ö) %–≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –¥–æ –ø–æ–¥—Å—á—ë—Ç–∞% "n-–æ–µ –∫–æ–ª-–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞(–º–∞–∫—Å–∏–º—É–º 10)"
    –ü—Ä–∏–º–µ—Ä:
    >poll "–ü—Ä–æ–≤–µ—Å—Ç–∏ —Å–µ–≥–æ–¥–Ω—è –ø–∞—Ä—É?" 60 –î–∞ –ù–µ—Ç "–ù–∞ –≤–∞—à–µ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ"
    –ï—Å–ª–∏ –Ω–µ—Ç—É –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞, —Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞–≤–∏—Ç—å—Å—è –î–∞/–ù–µ—Ç.
    """
    __name__ = '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ'


    @commands.command(name="poll",
                      pass_context=True)
    async def execute(self, ctx, question, time: int, *options):
        """
        –ù–∞—á–∞–ª–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ü—Ä–∏–º–µ—Ä >poll "–≤–æ–ø—Ä–æ—Å" –≤—Ä–µ–º—è_–Ω–∞_—Å–±–æ—Ä_–æ—Ç–≤–µ—Ç–æ–≤ [–≤–∞—Ä–∏–∞–Ω—Ç_–æ—Ç–≤–µ—Ç–∞_1 –≤–∞—Ä–∏–∞–Ω—Ç_–æ—Ç–≤–µ—Ç–∞_2]
        """

        message = Poll.build_msg(*options)
        react_message = await self.send_msg(ctx, question, message)

        await self.add_react(react_message, *options)
        await asyncio.sleep(time)
        await self.send_result(ctx, react_message, *options)

    @execute.error
    async def errors(self, ctx, error):
        await ctx.send('–í—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–∞–∫: >poll "–í–æ–ø—Ä–æ—Å?" 60 "–î–∞" "–ù–µ—Ç" "–ù–∞ –≤–∞—à–µ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ"')

    async def send_msg(self, ctx, question, message):
        embed = discord.Embed(title=question, color=Poll.color, description=message)
        react_message = await ctx.send(embed=embed)

        return react_message

    async def add_react(self, message, *options):
        if not options:
            await message.add_reaction('‚úÖ')
            await message.add_reaction('‚ùé')
        else:
            for i in range(len(options)):
                await message.add_reaction(Poll.react_list[i])

    async def send_result(self, ctx, message, *options):
        channel = message.channel
        message = await channel.fetch_message(message.id)
        result = Poll.result

        if not options:
            result += f"\n–ö–æ–ª-–≤–æ ‚úÖ = {message.reactions[0].count - 1}" \
                      f"\n–ö–æ–ª-–≤–æ ‚ùé = {message.reactions[1].count - 1}"
        else:
            for i in range(len(options)):
                result += f"\n–ö–æ–ª-–≤–æ {Poll.react_list[i]} = {message.reactions[i].count - 1}"

        await ctx.reply(result)